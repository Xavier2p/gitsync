var searchIndex = JSON.parse('{\
"gsync":{"doc":"<strong>A tool to earn time at each <code>git</code> actions.</strong>","t":"AAFDLLLLLLLLLLLLLMMMLLLLLLMMFFFFFF","n":["args","git","main","Args","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","fmt","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","local","message","tag","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","updated","verbose","add","commit","log","push","status","tag"],"q":["gsync","","","gsync::args","","","","","","","","","","","","","","","","","","","","","","","","","gsync::git","","","","",""],"d":["","Git Module","The main function.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","If used, the commit won’t be pushed.","The message of the commit.","The tag of the commit.","","","","","","","Add only the updated files.","Enable verbose mode.","Stages the files.","Creates a commit with the given message.","Gets the 10 last logs of the repository. Displays with the …","Push the changes to the remote.","Gets the status of the repository.","Tag the commit with the given tag."],"i":[0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0],"f":[0,0,[[]],0,[1,1],[1,1],[[]],[[]],[2,2],[[]],[[2,3],4],[[]],[5,[[7,[2,6]]]],[5,[[7,[2,6]]]],[[]],[[],1],[[],1],0,0,0,[[]],[[],7],[[],7],[[],8],[[2,5],[[7,[6]]]],[[2,5],[[7,[6]]]],0,0,[9],[10],[[]],[[]],[[]],[10]],"p":[[6,"Command"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[3,"TypeId"],[15,"bool"],[15,"str"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
