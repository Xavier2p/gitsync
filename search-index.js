var searchIndex = JSON.parse('{\
"gsync":{"doc":"<strong>A tool to earn time at each <code>git</code> actions.</strong>","t":"AAFDLLLLLLLLLLMMMMLLLLLMMFFFFFFF","n":["args","git","main","Args","augment_args","augment_args_for_update","borrow","borrow_mut","from","from_arg_matches","from_arg_matches_mut","into","into_app","into_app_for_update","local","message","sign","tag","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","updated","verbose","add","commit","log","push","push_tag","status","tag"],"q":[[0,"gsync"],[3,"gsync::args"],[25,"gsync::git"]],"d":["Args Module","Git Module","The main function.","The arguments parser.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","If used, the commit won’t be pushed, only committed.","Message to assign at the commit.","Sign the commit.","Tag to assign at the commit.","","","","","","Add only the updated files.","Enables verbose mode.","Stages the files.","Creates a commit with the given message.","Gets the 10 last logs of the repository. Displays with the …","Push the changes to the remote.","Push the tags to the remote.","Gets the status of the repository.","Tag the commit with the given tag."],"i":[0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0],"f":[0,0,[[]],0,[1,1],[1,1],[[]],[[]],[[]],[2,[[5,[3,4]]]],[2,[[5,[3,4]]]],[[]],[[],1],[[],1],0,0,0,0,[[],5],[[],5],[[],6],[[3,2],[[5,[4]]]],[[3,2],[[5,[4]]]],0,0,[7],[[8,7]],[[]],[[]],[[]],[[]],[8]],"c":[],"p":[[6,"Command"],[3,"ArgMatches"],[3,"Args"],[3,"Error"],[4,"Result"],[3,"TypeId"],[15,"bool"],[15,"str"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
